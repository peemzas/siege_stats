"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/upload/route";
exports.ids = ["app/api/upload/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fupload%2Froute&page=%2Fapi%2Fupload%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fupload%2Froute.ts&appDir=%2FUsers%2Fpichetlert%2FDocuments%2Ffaswork%2Frepo%2Fsiege_stat%2Fsiege_stat%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fpichetlert%2FDocuments%2Ffaswork%2Frepo%2Fsiege_stat%2Fsiege_stat&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":
/*!************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fupload%2Froute&page=%2Fapi%2Fupload%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fupload%2Froute.ts&appDir=%2FUsers%2Fpichetlert%2FDocuments%2Ffaswork%2Frepo%2Fsiege_stat%2Fsiege_stat%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fpichetlert%2FDocuments%2Ffaswork%2Frepo%2Fsiege_stat%2Fsiege_stat&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_pichetlert_Documents_faswork_repo_siege_stat_siege_stat_src_app_api_upload_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/upload/route.ts */ \"(rsc)/./src/app/api/upload/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/upload/route\",\n        pathname: \"/api/upload\",\n        filename: \"route\",\n        bundlePath: \"app/api/upload/route\"\n    },\n    resolvedPagePath: \"/Users/pichetlert/Documents/faswork/repo/siege_stat/siege_stat/src/app/api/upload/route.ts\",\n    nextConfigOutput,\n    userland: _Users_pichetlert_Documents_faswork_repo_siege_stat_siege_stat_src_app_api_upload_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/upload/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZ1cGxvYWQlMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRnVwbG9hZCUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRnVwbG9hZCUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRnBpY2hldGxlcnQlMkZEb2N1bWVudHMlMkZmYXN3b3JrJTJGcmVwbyUyRnNpZWdlX3N0YXQlMkZzaWVnZV9zdGF0JTJGc3JjJTJGYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj0lMkZVc2VycyUyRnBpY2hldGxlcnQlMkZEb2N1bWVudHMlMkZmYXN3b3JrJTJGcmVwbyUyRnNpZWdlX3N0YXQlMkZzaWVnZV9zdGF0JmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDYztBQUMwQztBQUN2SDtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0hBQW1CO0FBQzNDO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLGlFQUFpRTtBQUN6RTtBQUNBO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ3VIOztBQUV2SCIsInNvdXJjZXMiOlsid2VicGFjazovL3NpZWdlX3N0YXQvP2JiY2EiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBwYXRjaEZldGNoIGFzIF9wYXRjaEZldGNoIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvbGliL3BhdGNoLWZldGNoXCI7XG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiL1VzZXJzL3BpY2hldGxlcnQvRG9jdW1lbnRzL2Zhc3dvcmsvcmVwby9zaWVnZV9zdGF0L3NpZWdlX3N0YXQvc3JjL2FwcC9hcGkvdXBsb2FkL3JvdXRlLnRzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcIlwiXG5jb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBSb3V0ZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgIHBhZ2U6IFwiL2FwaS91cGxvYWQvcm91dGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS91cGxvYWRcIixcbiAgICAgICAgZmlsZW5hbWU6IFwicm91dGVcIixcbiAgICAgICAgYnVuZGxlUGF0aDogXCJhcHAvYXBpL3VwbG9hZC9yb3V0ZVwiXG4gICAgfSxcbiAgICByZXNvbHZlZFBhZ2VQYXRoOiBcIi9Vc2Vycy9waWNoZXRsZXJ0L0RvY3VtZW50cy9mYXN3b3JrL3JlcG8vc2llZ2Vfc3RhdC9zaWVnZV9zdGF0L3NyYy9hcHAvYXBpL3VwbG9hZC9yb3V0ZS50c1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzIH0gPSByb3V0ZU1vZHVsZTtcbmNvbnN0IG9yaWdpbmFsUGF0aG5hbWUgPSBcIi9hcGkvdXBsb2FkL3JvdXRlXCI7XG5mdW5jdGlvbiBwYXRjaEZldGNoKCkge1xuICAgIHJldHVybiBfcGF0Y2hGZXRjaCh7XG4gICAgICAgIHNlcnZlckhvb2tzLFxuICAgICAgICBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlXG4gICAgfSk7XG59XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIG9yaWdpbmFsUGF0aG5hbWUsIHBhdGNoRmV0Y2gsICB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcm91dGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fupload%2Froute&page=%2Fapi%2Fupload%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fupload%2Froute.ts&appDir=%2FUsers%2Fpichetlert%2FDocuments%2Ffaswork%2Frepo%2Fsiege_stat%2Fsiege_stat%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fpichetlert%2FDocuments%2Ffaswork%2Frepo%2Fsiege_stat%2Fsiege_stat&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./src/app/api/upload/route.ts":
/*!*************************************!*\
  !*** ./src/app/api/upload/route.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n\nfunction parseAndProcessLog(log) {\n    const playerStats = {};\n    const guildStats = {};\n    const guildPlayers = {};\n    const getPlayer = (name)=>{\n        if (!playerStats[name]) {\n            playerStats[name] = {\n                name,\n                guildName: \"\",\n                totalPoints: 0,\n                totalKills: 0,\n                totalDeaths: 0,\n                totalKillsEachGuild: [],\n                totalDeathsEachGuild: [],\n                events: [],\n                kills: [],\n                killedBy: []\n            };\n        }\n        return playerStats[name];\n    };\n    const getGuild = (name)=>{\n        if (!guildStats[name]) {\n            guildStats[name] = {\n                name,\n                playerCount: 0,\n                totalPointsFromKills: 0,\n                totalExtraLifePoints: 0,\n                totalPoints: 0,\n                totalKills: 0,\n                totalDeaths: 0,\n                kills: [],\n                killedBy: []\n            };\n            guildPlayers[name] = new Set();\n        }\n        return guildStats[name];\n    };\n    const addOrIncrementStat = (arr, name)=>{\n        const existing = arr.find((s)=>s.name === name);\n        if (existing) {\n            existing.count++;\n        } else {\n            arr.push({\n                name,\n                count: 1\n            });\n        }\n    };\n    const entries = log.trim().split(/\\n\\s*\\n/);\n    const allPlayerNames = new Set();\n    // First pass: Extract all unique player names and initialize their stats\n    for (const entry of entries){\n        const lines = entry.split(\"\\n\");\n        if (lines.length < 2) continue;\n        const killStatLine = lines[0].trim();\n        const attackMatch = killStatLine.match(/\\[([^\\]]+)\\]\\s+\\[([^\\]]+)\\]\\s+([^(\\s]+)\\s*\\(/);\n        const defenseMatch = killStatLine.match(/→ Attack \\[([^\\]]+)\\](?: Guild Master| Defender)? (.+)$/);\n        if (attackMatch) {\n            allPlayerNames.add(attackMatch[3].trim()) // Attacker name\n            ;\n        }\n        if (defenseMatch) {\n            allPlayerNames.add(defenseMatch[2].trim()) // Defender name\n            ;\n        }\n    }\n    // Initialize playerStats for all unique players\n    allPlayerNames.forEach((name)=>getPlayer(name));\n    // Second pass: Process events and populate stats\n    for (const entry of entries){\n        const lines = entry.split(\"\\n\");\n        if (lines.length < 2) continue;\n        const killStatLine = lines[0].trim();\n        const pointLine = lines[1].trim();\n        const attackMatch = killStatLine.match(/\\[([^\\]]+)\\]\\s+\\[([^\\]]+)\\]\\s+(?:Guild Master\\s*)?([^\\(]+)\\s*\\(/);\n        const defenseMatch = killStatLine.match(/→ Attack \\[([^\\]]+)\\](?: Guild Master| Defender)? (.+)$/);\n        if (attackMatch && defenseMatch) {\n            const timestamp = attackMatch[1].trim();\n            const attackerGuildName = attackMatch[2].trim();\n            const attackerName = attackMatch[3].trim();\n            const defenderGuildName = defenseMatch[1].trim();\n            const defenderName = defenseMatch[2].trim();\n            const totalPointsEachKill = [\n                ...pointLine.matchAll(/\\+(\\d+)/g)\n            ].reduce((sum, match)=>sum + parseInt(match[1], 10), 0);\n            const attackerGuild = getGuild(attackerGuildName);\n            guildPlayers[attackerGuildName].add(attackerName);\n            const defenderGuild = getGuild(defenderGuildName);\n            guildPlayers[defenderGuildName].add(defenderName);\n            const attackerPlayer = getPlayer(attackerName);\n            attackerPlayer.guildName = attackerGuildName;\n            attackerPlayer.totalPoints += totalPointsEachKill;\n            attackerPlayer.totalKills += 1;\n            attackerPlayer.events.push({\n                type: \"kill\",\n                data: {\n                    playerName: defenderName,\n                    guildName: defenderGuildName,\n                    timestamp\n                }\n            });\n            attackerGuild.totalPointsFromKills += totalPointsEachKill;\n            attackerGuild.totalKills += 1;\n            addOrIncrementStat(attackerGuild.kills, defenderGuildName);\n            const defenderPlayer = getPlayer(defenderName);\n            defenderPlayer.totalDeaths += 1;\n            defenderPlayer.guildName = defenderGuildName;\n            defenderPlayer.events.push({\n                type: \"death\",\n                data: {\n                    playerName: attackerName,\n                    guildName: attackerGuildName,\n                    timestamp\n                }\n            });\n            defenderGuild.totalDeaths += 1;\n            addOrIncrementStat(defenderGuild.killedBy, attackerGuildName);\n        }\n    }\n    const allPlayers = new Set();\n    Object.values(guildPlayers).forEach((playerSet)=>{\n        playerSet.forEach((player)=>allPlayers.add(player));\n    });\n    const playerResults = Object.values(playerStats).map((p)=>{\n        p.events.sort((a, b)=>new Date(a.data.timestamp).getTime() - new Date(b.data.timestamp).getTime());\n        const lives = [];\n        let currentLife = {\n            kills: []\n        };\n        for (const event of p.events){\n            if (event.type === \"kill\") {\n                currentLife.kills.push(event.data);\n            } else if (event.type === \"death\") {\n                currentLife.death = event.data;\n                lives.push(currentLife);\n                currentLife = {\n                    kills: []\n                };\n            }\n        }\n        if (currentLife.kills.length > 0) {\n            lives.push(currentLife);\n        }\n        const kills = p.events.filter((e)=>e.type === \"kill\").reduce((acc, e)=>{\n            const existing = acc.find((k)=>k.name === e.data.playerName);\n            if (existing) {\n                existing.count++;\n            } else {\n                acc.push({\n                    name: e.data.playerName,\n                    count: 1\n                });\n            }\n            return acc;\n        }, []);\n        const killedBy = p.events.filter((e)=>e.type === \"death\").reduce((acc, e)=>{\n            const existing = acc.find((k)=>k.name === e.data.playerName);\n            if (existing) {\n                existing.count++;\n            } else {\n                acc.push({\n                    name: e.data.playerName,\n                    count: 1\n                });\n            }\n            return acc;\n        }, []);\n        // Calculate totalKillsEachGuild - count kills per guild\n        const totalKillsEachGuild = p.events.filter((e)=>e.type === \"kill\").reduce((acc, e)=>{\n            const guildName = e.data.guildName;\n            const existing = acc.find((g)=>g.guildName === guildName);\n            if (existing) {\n                existing.count++;\n            } else {\n                acc.push({\n                    guildName,\n                    count: 1\n                });\n            }\n            return acc;\n        }, []).sort((a, b)=>b.count - a.count);\n        // Calculate totalDeathsEachGuild - count deaths per guild\n        const totalDeathsEachGuild = p.events.filter((e)=>e.type === \"death\").reduce((acc, e)=>{\n            const guildName = e.data.guildName;\n            const existing = acc.find((g)=>g.guildName === guildName);\n            if (existing) {\n                existing.count++;\n            } else {\n                acc.push({\n                    guildName,\n                    count: 1\n                });\n            }\n            return acc;\n        }, []).sort((a, b)=>b.count - a.count);\n        return {\n            ...p,\n            lives,\n            kills,\n            killedBy,\n            totalKillsEachGuild,\n            totalDeathsEachGuild\n        };\n    }).sort((a, b)=>b.totalPoints - a.totalPoints);\n    const guildResults = Object.values(guildStats).map((guild)=>{\n        const maxLifePoints = guildPlayers[guild.name].size * 10;\n        const totalExtraLifePoints = maxLifePoints - guild.totalDeaths;\n        return {\n            ...guild,\n            playerCount: guildPlayers[guild.name].size,\n            totalExtraLifePoints,\n            totalPoints: guild.totalPointsFromKills + totalExtraLifePoints\n        };\n    }).sort((a, b)=>b.totalPoints - a.totalPoints);\n    return {\n        playerResults,\n        guildResults\n    };\n}\nasync function POST(req) {\n    const formData = await req.formData();\n    const file = formData.get(\"file\");\n    if (!file) {\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"No file uploaded\"\n        }, {\n            status: 400\n        });\n    }\n    const text = await file.text();\n    const parsedData = parseAndProcessLog(text);\n    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(parsedData);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/upload/route.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fupload%2Froute&page=%2Fapi%2Fupload%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fupload%2Froute.ts&appDir=%2FUsers%2Fpichetlert%2FDocuments%2Ffaswork%2Frepo%2Fsiege_stat%2Fsiege_stat%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fpichetlert%2FDocuments%2Ffaswork%2Frepo%2Fsiege_stat%2Fsiege_stat&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();